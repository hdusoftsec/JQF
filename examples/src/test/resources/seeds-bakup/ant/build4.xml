<?xml version="1.0"?>

<project name="ssh" basedir="." default="usage">

      <property name="name" value="ssh"/>

      <property name="war.dir" value="war"/>

      <property name="src.dir" value="src"/>

      <property name="client.dir" value="client"/>

      <property name="build.dir" value=".classes"/>

      <property name="webcontent.dir" value="WebContent"/>

      <property name="prjlib.dir" value="lib"/>   

      <property name="webcontentlib.dir" value="${webcontent.dir}/WEB-INF/lib"/>

      <property name="weblib.dir" value="${war.dir}/WEB-INF/lib"/>

      <property name="dist.dir" value="dist"/>

      <property environment="env"/>

      <property name="tomcat.home" value="${env.CATALINA_HOME}"/>

      <property name="webapp.dist" value="${dist.dir}/webapps"/>  

      <path id="master-classpath">

          <fileset dir="${webcontentlib.dir}">

              <include name="hibernate3.jar"/>

              <include name="spring.jar"/>           

              <include name="struts.jar"/>           

              <include name="struts-el.jar"/>           

              <include name="struts-menu-2.4.2.jar"/>           

              <include name="acegi-security-1.0.2.jar"/>           

              <include name="activation.jar"/>           

              <include name="antlr.jar"/>           

              <include name="antlr-2.7.6.jar"/>           

              <include name="asm.jar"/>           

              <include name="aspectjweaver-1.5.2.jar"/>           

              <include name="cglib-2.1.3.jar"/>           

              <include name="commons-beanutils.jar"/>           

              <include name="commons-codec-1.3.jar"/>           

              <include name="commons-collections.jar"/>           

              <include name="commons-dbcp.jar"/>           

              <include name="commons-digester.jar"/>           

              <include name="commons-fileupload.jar"/>           

              <include name="commons-io.jar"/>   

              <include name="commons-lang.jar"/>           

              <include name="commons-logging-1.1.jar"/>           

              <include name="commons-pool.jar"/>           

              <include name="commons-validator.jar"/>           

              <include name="displaytag-1.1.jar"/>           

              <include name="dom4j-1.6.1.jar"/>           

              <include name="dwr.jar"/>           

              <include name="ehcache-1.2.3.jar"/>           

              <include name="itext-1.4.jar"/>           

              <include name="jakarta-oro.jar"/>            

              <include name="jstl.jar"/>           

              <include name="jta.jar"/>           

              <include name="log4j-1.2.11.jar"/>           

              <include name="mail.jar"/>           

              <include name="oscache-2.3.2.jar"/>           

              <include name="mysql-connector-java-5.0.3-bin.jar"/>           

              <include name="sitemesh-2.2.1.jar"/>           

              <include name="standard.jar"/>           

              <include name="urlrewrite-3.0-beta.jar"/>           

              <include name="velocity-1.4.jar"/>           

              <include name="velocity-tools-view-1.1.jar"/>           

          </fileset>

          <fileset dir="${prjlib.dir}/servletapi-2.3">

              <include name="servletapi-2.3.jar"/>

          </fileset>       

      </path>  

      <target name="usage">

          <echo message=""/>

          <echo message="Spring JPetStore build file"/>

          <echo message="------------------------------------------------------"/>

          <echo message=""/>

          <echo message="Available targets are:"/>

          <echo message=""/>

          <echo message="clean      --> Clean output dirs"/>

          <echo message="build      --> Compile main Java sources and copy libraries"/>

          <echo message="warfile --> Build the web application archive"/>

          <echo message="all        --> Clean, build, warfile"/>

          <echo message=""/>

      </target>  

      <target name="clean" description="Clean output dirs (build, weblib, dist)">

          <delete dir="${build.dir}"/>

          <delete dir="${weblib.dir}"/>

          <delete dir="${war.dir}"/>

          <delete dir="${dist.dir}"/>

          <delete file="client/${name}.jar"/>

      </target>

      <target name="build" description="Compile main source tree java files into class files, generate jar files">

          <mkdir dir="${build.dir}"/>

          <mkdir dir="${war.dir}"/>

          <javac destdir="${build.dir}" source="1.3" target="1.3" debug="true"

                  deprecation="false" optimize="false" failοnerrοr="true">

              <src path="${src.dir}"/>

              <classpath refid="master-classpath"/>

          </javac>

          <mkdir dir="${weblib.dir}"/>

          <mkdir dir="${war.dir}/WEB-INF/classes"/>

          <jar jarfile="${weblib.dir}/${name}.jar" compress="true" basedir="${build.dir}"/>

          <copy todir="${war.dir}" preservelastmodified="true">

              <fileset dir="${webcontent.dir}">

                  <include name="**/**"/>

                  <include name="**.**"/>

              </fileset>

          </copy>

          <copy todir="${war.dir}/WEB-INF/classes" preservelastmodified="true">

              <fileset dir="${src.dir}">

                  <include name="*.xml"/>

                  <include name="**/*.properties"/>

                  <include name="**/*.vm"/>

                  <exclude name="**/.*"/>

              </fileset>

          </copy>       

      

          <copy file="${weblib.dir}/${name}.jar" tofile="${client.dir}/${name}.jar"/>

      </target>

      <target name="dist" depends="warfile">

          <!--

              Delegate to warfile target by depending on it. dist is just to offer

              a generic target name across all Spring sample apps that may be used

              for autobuilds testing.

          -->

      </target>

      <target name="warfile" depends="build" description="Build the web application archive">

          <mkdir dir="${dist.dir}"/>

          <war warfile="${dist.dir}/${name}.war" basedir="${war.dir}" webxml="${webcontent.dir}/WEB-INF/web.xml">

              <include name="*"/>

              <include name="images/**"/>

              <include name="common/**"/>

              <include name="decorators/**"/>

              <include name="scripts/**"/>

              <include name="styles/**"/>

              <include name="WEB-INF/*.*"/>

              <include name="WEB-INF/lib/**"/>

              <include name="WEB-INF/pages/**"/>

              <include name="WEB-INF/classes/**"/>

              <exclude name="WEB-INF/web.xml"/>

          </war>

      </target>

      <target name="all" depends="clean,build,warfile" description="Clean,build,warfile"/>

</project>